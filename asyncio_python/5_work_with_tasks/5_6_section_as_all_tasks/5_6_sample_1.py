import asyncio


async def task_coroutine(num):
    await asyncio.sleep(1)
    print(f"Задача {num} выполнена")


async def main():
    # Создание списка асинхронных задач с использованием генератора списков
    tasks = [asyncio.create_task(task_coroutine(x)) for x in range(5)]

    # Получение списка всех незавершенных задач для текущего событийного цикла

    all_tasks = asyncio.all_tasks()
    # Вывод количества задач
    print(f"Количество задач: {len(all_tasks)}")

    await asyncio.gather(*tasks)
    for task in all_tasks:
        print(task)


asyncio.run(main())

"""
Обратите внимание на то, что в списке tasks задач 5, а код принтует, что 
задач 6. Это происходит по причине того, что в момент создания и запуска 
event loop через asyncio.run(main()) автоматически создается задача с 
именем Task-1 из корутины main(). Эта задача является объемлющей для всех 
остальных. Собственно все действия, которые мы предпринимаем для печати, 
происходят внутри этой задачи. Поскольку результаты печати видны, это 
указывает на то, что задача ещё не завершила свою работу, и её текущий 
статус — pending
"""
