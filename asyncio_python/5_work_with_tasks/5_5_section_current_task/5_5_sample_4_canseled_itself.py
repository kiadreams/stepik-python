import asyncio


"""
Задача/Task, получив ссылку на себя, может выполнять различные операции, в том числе отменять себя
с помощью метода cancel(). Следует отметить, что запуск такой задачи создаст запрос на ее отмену, 
при этом исключение CancelledError будет выброшено в обернутую корутину на следующей итерации 
цикла событий.
"""

async def my_task():
    current_task = asyncio.current_task()
    print(f"Текущий объект задачи: {current_task}")

    await asyncio.sleep(1)

    # Отмена текущей задачи
    current_task.cancel()

    # До этой строки мы дойдём, т.к. невозможно отменить активную в данный момент задачу.
    print(420)


async def main():
    task = asyncio.create_task(my_task())
    await task


asyncio.run(main())

"""
В этом коде происходит интересное поведение: несмотря на то, что задача была отменена, корутина 
все равно выводит результат до того, как происходит исключение CancelledError. Давайте разберем, 
что здесь происходит:

    Создание и запуск задачи: В корутине my_task() сначала получаем объект текущей задачи с 
    помощью asyncio.current_task() и выводим информация о ней. 

    Попытка отмены задачи: После паузы происходит вызов current_task.cancel(), который инициирует 
    процесс отмены текущей задачи.

    Продолжение выполнения после отмены: Несмотря на попытку отмены, выполнение кода внутри 
    my_task() продолжается до тех пор, пока не достигнет выражения print(420). Это происходит 
    потому, что cancel() не останавливает выполнение корутины немедленно. Отмена задачи просто 
    ставит отметку, что задача должна быть отменена, и исключение CancelledError будет выброшено 
    только тогда, когда управление возвращается в цикл событий, который проверяет статус задачи 
    перед следующим шагом ее выполнения.

    Выброс исключения CancelledError: Как только пауза в корутине заканчивается и исполнение кода 
    возвращается в точку, где была вызвана await task в корутине main(), asyncio обнаруживает, 
    что задача была отменена, и выбрасывает исключение CancelledError.

Таким образом, вывод 420 указывает на то, что после отмены текущей задачи корутина успела 
выполнить все команды до завершения своего блока кода, прежде чем исключение CancelledError было 
активировано. 
"""